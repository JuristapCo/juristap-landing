---
import { Image } from 'astro:assets';
import Logo from '../assets/images/brand/logo-horizontal-white.webp';
---

<header
  class="fixed top-4 left-1/2 -translate-x-1/2 w-[95%] max-w-7xl text-white rounded-2xl z-40 transition-all duration-500"
>
  <div
    class="container mx-auto flex items-center justify-between p-4 md:p-4 transition-all duration-500"
    id="headerContent"
  >
    <Image
      src={Logo}
      alt="Juristap"
      class="w-auto h-8 hover:opacity-90 transition-all duration-300 hover:scale-105"
      draggable="false"
    />
    <nav class="hidden lg:flex gap-8 relative items-center desktop-nav">
      <div
        class="absolute inset-0 bg-white/90 rounded-full transition-all duration-500 ease-in-out opacity-0"
        id="hoverBubble"
      >
      </div>
      <a href="#" class="relative group px-4 py-2.5 rounded-lg z-10 flex items-center h-10">
        <span class="transition-all duration-300 group-hover:text-primary group-hover:scale-105"
          >Soy abogado</span
        >
      </a>
      <a href="#" class="relative group px-4 py-2.5 rounded-lg z-10 flex items-center h-10">
        <span class="transition-all duration-300 group-hover:text-primary group-hover:scale-105"
          >Soy un cliente</span
        >
      </a>
      <a href="#" class="relative group px-4 py-2.5 rounded-lg z-10 flex items-center h-10">
        <span class="transition-all duration-300 group-hover:text-primary group-hover:scale-105"
          >Contáctenos</span
        >
      </a>
    </nav>
    <div class="flex items-center gap-4">
      <button
        class="hidden sm:block bg-white text-primary font-medium cursor-pointer px-6 py-2 rounded-lg hover:bg-secondary-300 hover:text-white transition-all duration-300 shadow-md hover:shadow-lg hover:scale-105 active:scale-95"
        >Registrarse</button
      >
      <!-- Mobile Menu Button -->
      <button
        id="menuToggle"
        class="lg:hidden text-white focus:outline-none hover:text-secondary-300 transition-colors relative w-8 h-8"
      >
        <div class="absolute inset-0 flex items-center justify-center">
          <svg
            class="w-6 h-6 transition-all duration-300 transform"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              class="transition-all duration-300"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <svg
            class="w-6 h-6 transition-all duration-300 transform absolute opacity-0 rotate-90"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              class="transition-all duration-300"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </div>
      </button>
    </div>
  </div>
</header>

<!-- Mobile Menu - Outside header -->
<div
  id="mobileMenu"
  class="fixed inset-0 bg-primary z-50 transform -translate-x-full transition-transform duration-300 ease-in-out overflow-hidden"
>
  <!-- Menu items -->
  <nav class="flex flex-col w-full h-full px-6 py-8">
    <!-- Logo and close button container -->
    <div class="flex justify-between items-center mb-12">
      <Image src={Logo} alt="Juristap" class="w-auto h-8" draggable="false" />
      <button id="mobileMenuClose" class="text-white p-2">
        <svg
          class="w-8 h-8"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <div class="flex-1 flex flex-col justify-center">
      <div class="grid grid-cols-1 gap-4">
        <a href="#" class="mobile-menu-item">
          <div class="py-4 pl-6 pr-4 flex items-center justify-between rounded-xl">
            <span class="text-2xl font-medium text-white">Soy abogado</span>
            <div class="w-10 h-10 flex items-center justify-center rounded-full">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-white"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5l7 7-7 7"></path>
              </svg>
            </div>
          </div>
        </a>
        <a href="#" class="mobile-menu-item">
          <div class="py-4 pl-6 pr-4 flex items-center justify-between rounded-xl">
            <span class="text-2xl font-medium text-white">Soy cliente</span>
            <div class="w-10 h-10 flex items-center justify-center rounded-full">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-white"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5l7 7-7 7"></path>
              </svg>
            </div>
          </div>
        </a>
        <a href="#" class="mobile-menu-item">
          <div class="py-4 pl-6 pr-4 flex items-center justify-between rounded-xl">
            <span class="text-2xl font-medium text-white">Contáctenos</span>
            <div class="w-10 h-10 flex items-center justify-center rounded-full">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-white"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5l7 7-7 7"></path>
              </svg>
            </div>
          </div>
        </a>
      </div>
    </div>

    <div class="mt-8">
      <button
        class="w-full bg-white text-primary font-medium cursor-pointer px-6 py-4 rounded-xl shadow-lg flex items-center justify-center gap-3 text-lg"
      >
        <span>Registrarse</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </button>
    </div>
  </nav>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.getElementById('menuToggle');
    const mobileMenu = document.getElementById('mobileMenu');
    const mobileMenuClose = document.getElementById('mobileMenuClose');
    const header = document.querySelector('header');
    const headerContent = document.getElementById('headerContent');
    const logo = headerContent?.querySelector('img');
    const hamburgerIcon = menuToggle?.querySelector('svg:first-child');
    const closeIcon = menuToggle?.querySelector('svg:last-child');
    const hoverBubble = document.getElementById('hoverBubble');
    const navLinks = document.querySelectorAll('nav a');

    // Hover bubble effect with improved animation
    navLinks.forEach(link => {
      link.addEventListener('mouseenter', () => {
        if (hoverBubble) {
          const rect = link.getBoundingClientRect();
          const navRect = link.parentElement?.getBoundingClientRect();

          if (navRect) {
            const isScrolled = window.scrollY > 50;
            const scale = isScrolled ? 0.9 : 1;

            hoverBubble.style.width = `${rect.width / scale}px`;
            hoverBubble.style.height = `${rect.height / scale}px`;
            hoverBubble.style.left = `${(rect.left - navRect.left) / scale}px`;
            hoverBubble.style.top = `${(rect.top - navRect.top) / scale}px`;
            hoverBubble.style.opacity = '1';
            hoverBubble.style.transform = 'scale(1.05)';
          }
        }
      });

      link.addEventListener('mouseleave', () => {
        if (hoverBubble) {
          hoverBubble.style.transform = 'scale(1)';
        }
      });
    });

    // Hide bubble when mouse leaves nav with smooth transition
    const nav = document.querySelector('nav');
    nav?.addEventListener('mouseleave', () => {
      if (hoverBubble) {
        hoverBubble.style.opacity = '0';
        hoverBubble.style.transform = 'scale(1)';
      }
    });

    // Scroll handler for header size with improved transitions
    let lastScroll = 0;
    window.addEventListener('scroll', () => {
      const currentScroll = window.scrollY;

      if (currentScroll > 50) {
        header?.classList.add(
          'top-2',
          'w-[90%]',
          'scale-90',
          'bg-primary/80',
          'backdrop-blur-md',
          'shadow-xl',
          'md:max-w-5xl',
          'px-4',
          'md:px-6'
        );
        headerContent?.classList.add('p-3', 'md:p-4');
        logo?.classList.add('h-6');
      } else {
        header?.classList.remove(
          'top-2',
          'w-[90%]',
          'scale-90',
          'bg-primary/80',
          'backdrop-blur-md',
          'shadow-xl',
          'md:max-w-5xl',
          'px-4',
          'md:px-6'
        );
        headerContent?.classList.remove('p-3', 'md:p-4');
        logo?.classList.remove('h-6');
      }

      if (hoverBubble && hoverBubble.style.opacity === '1') {
        const activeLink = document.querySelector('nav a:hover');
        if (activeLink) {
          const rect = activeLink.getBoundingClientRect();
          const navRect = activeLink.parentElement?.getBoundingClientRect();
          if (navRect) {
            const isScrolled = currentScroll > 50;
            const scale = isScrolled ? 0.9 : 1;

            hoverBubble.style.width = `${rect.width / scale}px`;
            hoverBubble.style.height = `${rect.height / scale}px`;
            hoverBubble.style.left = `${(rect.left - navRect.left) / scale}px`;
            hoverBubble.style.top = `${(rect.top - navRect.top) / scale}px`;
          }
        }
      }

      lastScroll = currentScroll;
    });

    const closeMobileMenu = () => {
      mobileMenu?.classList.add('-translate-x-full');
      mobileMenu?.classList.remove('translate-x-0');
      hamburgerIcon?.classList.remove('opacity-0', 'rotate-90');
      closeIcon?.classList.add('opacity-0', 'rotate-90');
    };

    menuToggle?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('-translate-x-full');
      mobileMenu?.classList.toggle('translate-x-0');

      // Toggle icons
      hamburgerIcon?.classList.toggle('opacity-0');
      hamburgerIcon?.classList.toggle('rotate-90');
      closeIcon?.classList.toggle('opacity-0');
      closeIcon?.classList.toggle('rotate-90');
    });

    mobileMenuClose?.addEventListener('click', closeMobileMenu);

    // Close menu when clicking outside
    document.addEventListener('click', e => {
      if (
        mobileMenu &&
        !mobileMenu.contains(e.target as Node) &&
        !menuToggle?.contains(e.target as Node)
      ) {
        closeMobileMenu();
      }
    });
  });
</script>

<style>
  .mobile-menu-item {
    display: block;
    color: white;
  }

  /* Add smooth scroll behavior */
  html {
    scroll-behavior: smooth;
  }

  /* Ensure smooth transitions for header */
  header {
    transform-origin: center top;
    will-change: transform, width;
  }

  /* Mobile menu animation */
  #mobileMenu {
    will-change: transform;
  }

  /* Add subtle hover effect to desktop navigation elements */
  .desktop-nav button,
  .desktop-nav a {
    position: relative;
    overflow: hidden;
  }

  .desktop-nav button::after,
  .desktop-nav a::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%);
    transform-origin: 50% 50%;
  }

  .desktop-nav button:hover::after,
  .desktop-nav a:hover::after {
    animation: ripple 1s ease-out;
  }

  @keyframes ripple {
    0% {
      transform: scale(0, 0);
      opacity: 0.5;
    }
    100% {
      transform: scale(20, 20);
      opacity: 0;
    }
  }
</style>
